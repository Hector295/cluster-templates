cluster:
  apiServerVIP: "10.100.16.181"
  name: "prod-cluster" # nombre del cluster
  prefixNode: "ws"
  cloudCredentialSecretName: ""
  kubernetesVersion: v1.33.0+rke2r1 # version de kubernetes a usar
  etcd:
    exposeMetrics: false # ExposeMetrics define la política para la exposición de métricas ETCD
    backup:
      disableAutomaticSnapshots: true
    extraArgs: [] # configuración de etcd https://etcd.io/docs/v3.2/op-guide/configuration/
  # extraArgs:
  # - election-timeout=1000
  kubeComponents:
    kubeControllerManager:
      extraArgs: [] # extra args para el kube controller manager. https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/
      # extraArgs:
      # - cloud-provider=external
    kubeApiServer:
      extraArgs: [] # extra args para el kube apiserver. https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
    kubeShceduler:
      extraArgs: [] # extra args para el kube scheduler. https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/
    kubeProxy:
      extraArgs: [] # extra args para el kube proxy. https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/
    kubelet:
      extraArgs: [] # extra args para el kubelet de todos los nodos del cluster. https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/
  labels: {} # labels para todos los nodos del cluster
  annotations: {} # annotations para todos los nodos del cluster

# ===============
# Configuración global de OpenStack
# ===============
infraConfig:
  authUrl: http://10.100.1.22:5000/v3
  availabilityZones:
    - nova
  domainName: Default
  keypairName: Hector
  internalNetwork:
    netName: PUBLIC
    subnetName: VPN
  externalNetwork:
    netName: PUBLIC
  region: RegionOne
  sshUser: ubuntu
  tenantName: hventura
  username: hventura
  password:
    secret:
      name: passocp2
      namespace: default
  caCerts:
    configMap:
      name: ""
      namespace: ""

# ===============
# Nodos Control Plane
# ===============
controlPlaneNodes:
  quantity: 3
  taints: #"dedicated=large-workloads:NoSchedule"
    - key: node-role.kubernetes.io/control-plane
      value: true
      effect: NoSchedule
  labels:
    node-role.kubernetes.io/control-plane: "true"
  annotations: {}
  flavorName: m1.large
  imageName: Ubuntu 22.04 LTS
  securityGroups:
    - all
  name: cp-node-01

# ===============
# Nodos Worker
# ===============
workerNodes:
  defaults:
    taints:
      - key: node-role.kubernetes.io/worker
        effect: NoSchedule
    labels:
      node-role.kubernetes.io/worker: ""
    flavorName: m1.large
    imageName: Ubuntu 22.04 LTS
    quantity: 2
    securityGroups:
      - default
      - all

  nodes:
    - name: worker-node
      hostname: worker-node
      quantity: 2
      flavorName: m1.large
      labels:
        node-role.kubernetes.io/worker: "true"

cniConfig:
  podCIDR: "10.42.0.0/16"
  serviceCIDR: "10.42.0.0/16"
  mtu: 1440
  tunnelProtocol: "IPIP"
  masquerade: true
  bgp: false
  multusEnabled: false
  # Configures general installation parameters for Calico. Schema is based
  # on the operator.tigera.io/Installation API documented
  # here: https://docs.tigera.io/calico/latest/reference/installation/api#operator.tigera.io/v1.InstallationSpec
  # Values ref. for cilium: https://github.com/rancher/rke2-charts/blob/main/charts/rke2-cilium/rke2-cilium/1.17.300/values.yaml
  additionalConfig: {}

storage:
  longhorn:
    enabled: false
    customValues: {}
  openebs: # https://github.com/openebs/charts/blob/main/charts/openebs/values.yaml
    enabled: true
    customValues: {}
  cinder:
    enabled: false
    customValues: {}
  ceph:
    enabled: false
    clusterID: "aaaaaaaa-bbbb-1111-2222-33333ccccccc"
    monitorList: [ ]
    # monitorList:
    #  - "1.2.3.4:6789"
    #  - "1.2.3.5:6789"
    pool: "volumes"
    userID: "admin"
    userKey: "AAAAAAAAAAAAAAAAAA/BBBBBBBBBBBBBBBBBBB=="
    provisionerReplicaCount: 3
    reclaimPolicy: "Retain"
    enabledHostNetwork: false
    csiRBD:
      enabled: false
    csiFS:
      enabled: false
      fsName: ""
    customValues: {}
logging:
  enabled: true
  clusterOutputs:
    server:
      host: <changeme>
      port: 24224
  customValues: {}
metallb:
  enabled: true
  customValues: {}
monitoring:
  enabled: false
  thanos:
    objectStorage:
      accessKey: <changeme>
      bucket: <changeme>
      endpoint: <changeme:changeme>
      secretKey: <changeme>
  thanosIngress:
    host: <changeme>
  customValues: {}
ingressNginx:
  enabled: true
  customValues: {}
kubevirt:
  enabled: true
  customValues: {}
sriovOperator:
  enabled: true
  customValues: {}
nodeConfigOperator:
  enabled: true
  managerConfig:
    aptEnabled: true
    hostfsEnabled: true
  customValues:  {}
nmstateOperator:
  enabled: false
#  customValues: {}
sdnController:
  enabled: true
  customValues: { }
ntp:
  enabled: true
  customValues: { }
x509CertExporter:
  enabled: true
  customValues: { }

registries:
  enabled: false
#  mirrors:
#    "docker.io":
#      endpoints:
#        - "https://registry.internal.example.com"
#      rewrite: {}
#  configs:
#    "registry.internal.example.com":
#      auth:
#        username: "registry-user"
#        passwordSecret:
#          name: "registry-creds"
#          key: "password"
#      tls:
#        insecureSkipVerify: false
#        caSecret:
#          name: "registry-ca"
#          key: "ca.crt"